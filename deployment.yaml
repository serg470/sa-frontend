apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-js2ch
    field.cattle.io/publicEndpoints: '[{"addresses":["192.168.1.84"],"port":30114,"protocol":"TCP","serviceName":"sa:sentiment-analysis-frontend-nodeport","allNodes":true}]'
  generation: 2
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-sa-sentiment-analysis-frontend
  name: sentiment-analysis-frontend
  namespace: sa
  resourceVersion: "32092"
  selfLink: /apis/apps/v1beta2/namespaces/sa/deployments/sentiment-analysis-frontend
  uid: e1c18743-7d3b-11e9-963c-080027b2e727
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-sa-sentiment-analysis-frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"sentiment-analysis-frontend-nodeport","kind":"NodePort","name":"80tcp301141","protocol":"TCP","sourcePort":30114}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-sa-sentiment-analysis-frontend
    spec:
      containers:
      - image: serg470/sentiment-analysis-frontend:kuber
        imagePullPolicy: Always
        name: sentiment-analysis-frontend
        ports:
        - containerPort: 80
          name: 80tcp301141
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  observedGeneration: 2
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
